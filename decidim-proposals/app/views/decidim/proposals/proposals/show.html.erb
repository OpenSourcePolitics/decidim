<% add_decidim_meta_tags({
  description: @proposal.body,
  title: @proposal.title,
  url: proposal_url(@proposal.id)
}) %>

<%= render partial: "voting_rules" %>
<div class="row column view-header">
  <h2 class="heading2" id="proposal-title"><%= @proposal.title %></h2>
  <div class="author-data">
    <%= render partial: "decidim/shared/author_reference", locals: { author: Decidim::Proposals::ProposalPresenter.new(@proposal).author } %>
    <div class="author-data__extra">
      <button type="button" data-open="<%= current_user.present? ? 'flagModal' : 'loginModal' %>" title="<%= t('.report') %>" aria-controls="<%= current_user.present? ? 'flagModal' : 'loginModal' %>" aria-haspopup="true" tabindex="0">
        <%= icon "flag", aria_label: t('.report'), class: 'icon--small' %>
      </button>
      <% unless @proposal.official? %>
        <%= link_to_current_or_new_conversation_with(@proposal.author) %>
      <% end %>
      <!-- Use @proposal.title and @proposal.body for traduction -->
      <a id="see-trad">Voir la traduction</a>
    </div>
    <% if @proposal.withdrawable_by?(current_user) %>
      <%= action_authorized_link_to :withdraw, withdraw_proposal_path(@proposal), method: :put, class: "title-action__action button small hollow", title: t('.withdraw_btn_hint'), data: {confirm: t('.withdraw_confirmation')}  do %>
        <%= t('.withdraw_proposal') %>
        <%= icon "x" %>
      <% end %>
    <% end %>
  </div>
</div>
<div class="row">
  <div class="columns section view-side mediumlarge-4 mediumlarge-push-8 large-3 large-push-9">
    <% if can?(:edit, @proposal) %>
      <%= link_to t(".edit_proposal"), edit_proposal_path(@proposal), class: "button secondary hollow expanded button-sc button--icon follow-button" %>
    <% end %>
    <% if current_settings.votes_enabled? || show_endorsements_card? || current_user %>
      <div class="card">
        <div class="card__content">
          <% if current_settings.votes_enabled? %>
            <%= render partial: "votes_count", locals: { proposal: @proposal, from_proposals_list: false } %>
            <%= render partial: "vote_button", locals: { proposal: @proposal, from_proposals_list: false } %>
          <% end %>
          <%= render partial: "endorsements_card_row", locals: { proposal: @proposal } %>
          <br/>
          <% if current_user %>
            <%= render partial: "decidim/shared/follow_button", locals: { followable: @proposal } %>
          <% else %>
            <p class="mt-s mb-none">
              <%= t(".sign_in_or_up", {in: link_to(t(".sign_in"), decidim.new_user_session_path), up: link_to(t(".sign_up"), decidim.new_user_registration_path)}).html_safe %>
            </p>
          <% end %>
        </div>
      </div>
    <% end %>
    <%= resource_reference(@proposal) %>
    <%= render partial: "decidim/shared/share_modal" %>
    <%= embed_modal_for proposal_proposal_widget_url(@proposal, format: :js) %>
  </div>
  <div class="columns mediumlarge-8 mediumlarge-pull-4">
    <div class="section">
      <%= render partial: "proposal_badge", locals: { proposal: @proposal } %>
      <div id="proposal-body">
        <%= simple_format @proposal.body %>
      </div>
      <% if feature_settings.geocoding_enabled? %>
        <%= render partial: "decidim/shared/static_map", locals: { icon_name: "proposals", geolocalizable: @proposal } %>
      <% end %>
      <%= render partial: "decidim/shared/tags", locals: { resource: @proposal, tags_class_extra: "tags--proposal" } %>
    </div>
    <% if @proposal.answered? && translated_attribute(@proposal.answer).present? %>
      <% if @proposal.accepted? %>
        <div class="section">
          <div class="callout success">
            <h5><%= t(".proposal_accepted_reason") %></h5>
            <p><%= decidim_sanitize translated_attribute @proposal.answer %></p>
          </div>
        </div>
      <% elsif @proposal.rejected? %>
        <div class="section">
          <div class="callout warning">
            <h5><%= t(".proposal_rejected_reason") %></h5>
            <p><%= decidim_sanitize translated_attribute @proposal.answer %></p>
          </div>
        </div>
      <% else %>
        <div class="section">
          <div class="callout secondary">
            <h5><%= t(".proposal_in_evaluation_reason") %></h5>
            <p><%= decidim_sanitize translated_attribute @proposal.answer %></p>
          </div>
        </div>
      <% end %>
    <% end %>
    <%= linked_resources_for @proposal, :results, "included_proposals" %>
    <%= linked_resources_for @proposal, :projects, "included_proposals" %>
    <%= linked_resources_for @proposal, :meetings, "proposals_from_meeting" %>
    <%= linked_resources_for @proposal, :proposals, "copied_from_component" %>
  </div>
</div>
<%= attachments_for @proposal %>

<a name="list-of-endorsements"></a>
<%= render partial: 'endorsements_listing', locals: {proposal: @proposal} %>
<%= comments_for @proposal %>

<%= javascript_include_tag "decidim/proposals/social_share" %>
<%= stylesheet_link_tag "decidim/proposals/social_share" %>

<%=
  render partial: "decidim/shared/flag_modal", locals: {
    reportable: @proposal,
    form: @report_form,
    url: decidim.report_path(sgid: @proposal.to_sgid.to_s)
  }
%>

<script>

  // route : get '/babor', to: 'users#babor'

  // def babor
  //   uri = URI.parse("https://www.googleapis.com/youtube/v3/channels?part=statistics&id=UC61GK_nOLSJdzAK5hoR2mJA&fields=items/statistics/subscriberCount&key=AIzaSyBVOBi6H8DKh1MyEs7542AJtV-HKgJOLGI")
  //   request = Net::HTTP::Get.new(uri)
  //   request.content_type = "application/json"
  //   req_options = {
  //     use_ssl: uri.scheme == "https",
  //   }
  //   response = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  //     my_req = http.request(request)
  //     my_hash = JSON.parse(my_req.body)
  //     puts "Parametres ! : #{params[:bouf]}"
  //     render json: my_hash["items"][0]["statistics"]["subscriberCount"]
  //   end
  // end

  function get_traduction(original_text, callback) {
    $.ajax({
      url : "/api/traduction",
      type : 'GET',
      data : "original=" + original_text,
      dataType : 'json',

      success : function(body, status) {
        callback(body["translations"][0]["text"]);
      },

      error : function(body, status, error) {
        console.log(original_text);
        console.log(status + error);
        console.log("Nope : " + body);
      },

      complete : function(resultat, status) {

      }
    });
  }

  function reverseString(str) {
    array = str.split("");
    array.reverse();
    str = array.join('');
    return str;
  }

  $("#see-trad").on("click", function() {
    console.log("THIS.txt : " + $(this).text());
    console.log("THIS.parent : " + $(this).parent());
    var original_text = $("#proposal-title").html();
    get_traduction(original_text, function(converted_text) {
      $("#proposal-title").html(converted_text);
    });
    get_traduction($("#proposal-body").text(), function(converted_text) {
      $("#proposal-body").html("<p>" + converted_text + "</p>");
    });
  });

</script>
